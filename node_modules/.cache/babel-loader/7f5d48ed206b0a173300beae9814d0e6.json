{"remainingRequest":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/thread-loader/dist/cjs.js!/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js!/home/crax/Code/ZhuHaiBus-PWA/node_modules/vuetify-loader/lib/loader.js!/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/crax/Code/ZhuHaiBus-PWA/src/components/SearchModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/crax/Code/ZhuHaiBus-PWA/src/components/SearchModal.vue","mtime":1550420985572},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1550211689884},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/thread-loader/dist/cjs.js","mtime":1550211706775},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js","mtime":1550211689805},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vuetify-loader/lib/loader.js","mtime":1550211707105},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1550211689884},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js","mtime":1550211706840}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport _objectSpread from \"/home/crax/Code/ZhuHaiBus-PWA/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters, mapState, mapMutations } from \"vuex\";\nimport { characterMatchRoute } from \"@/script/utils\";\nexport default {\n  data: function data() {\n    return {\n      inputValue: null,\n      matchedRouters: []\n    };\n  },\n  computed: _objectSpread({}, mapState([\"searchBarStatus\", \"globalRouters\"])),\n  watch: {\n    inputValue: function inputValue(val) {\n      this.matchedRouters = characterMatchRoute(\"\".concat(val, \"\\u8DEF\"));\n    }\n  },\n  methods: _objectSpread({}, mapActions([\"changeSearchBarState\", \"viewConversion\"]), mapMutations([\"addRouters\", \"stickyRouter\", \"checkDuplicateRoute\"]), {\n    clickEventProcess: function clickEventProcess(routerInfo) {\n      this.changeSearchBarState();\n\n      if (this.checkDuplicateRoute(routerInfo.Id)) {\n        this.stickyRouter(routerInfo);\n      } else {\n        this.addRouters(routerInfo);\n      }\n\n      var opts = {\n        handle: \"push\",\n        params: {\n          name: \"details\",\n          params: routerInfo\n        }\n      };\n      this.viewConversion(opts);\n    },\n    checkDuplicateRoute: function checkDuplicateRoute(id) {\n      return this.globalRouters.some(function (route) {\n        return route.Id === id;\n      });\n    }\n  })\n};",{"version":3,"sources":["SearchModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,SAAA,mBAAA,QAAA,gBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,IADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,iBAAA,EAAA,eAAA,CAAA,CADA,CAPA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,sBACA,GADA,EACA;AACA,WAAA,cAAA,GAAA,mBAAA,WAAA,GAAA,YAAA;AACA;AAHA,GAVA;AAeA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,sBAAA,EAAA,gBAAA,CAAA,CADA,EAEA,YAAA,CAAA,CAAA,YAAA,EAAA,cAAA,EAAA,qBAAA,CAAA,CAFA;AAGA,IAAA,iBAHA,6BAGA,UAHA,EAGA;AACA,WAAA,oBAAA;;AACA,UAAA,KAAA,mBAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,aAAA,YAAA,CAAA,UAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,CAAA,UAAA;AACA;;AACA,UAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,MAAA,EAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,MAAA,EAAA;AAAA;AAFA,OAAA;AAIA,WAAA,cAAA,CAAA,IAAA;AACA,KAfA;AAgBA,IAAA,mBAhBA,+BAgBA,EAhBA,EAgBA;AACA,aAAA,KAAA,aAAA,CAAA,IAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,OAAA,CAAA;AACA;AAlBA;AAfA,CAAA","sourcesContent":["<template>\n  <div class=\"modal-backdrop\">\n    <v-card class=\"search_modal_wrap\">\n      <v-card flat class=\"search_bar\">\n        <v-btn icon>\n          <v-icon>search</v-icon>\n        </v-btn>\n        <v-text-field lable=\"Search\" v-model=\"inputValue\" single-line autofocus></v-text-field>\n        <v-btn icon @click=\"changeSearchBarState\">\n          <v-icon>close</v-icon>\n        </v-btn>\n      </v-card>\n      <v-divider></v-divider>\n      <v-card v-if=\"inputValue\" class=\"search_result_wrap\">\n        <v-list two-line>\n          <v-card\n            ripple\n            v-for=\"(router, index) in matchedRouters\"\n            :key=\"index\"\n            @click=\"clickEventProcess(router)\"\n          >\n            <v-card-title>\n              <v-layout>\n                <v-flex>\n                  <div class=\"title\">{{ router.Name }}</div>\n                  <span class=\"body-2\">{{ router.FromStation }}</span>\n                  <v-icon small class=\"arrow_forward_icon\">arrow_forward</v-icon>\n                  <span class=\"body-2\">{{ router.ToStation }}</span>\n                </v-flex>\n                <v-flex>\n                  <div class=\"caption\">最早班次:{{ router.BeginTime }}</div>\n                  <div class=\"caption\">最后班次:{{ router.EndTime }}</div>\n                  <div class=\"caption\">班次间隔:{{ router.Interval }}min</div>\n                </v-flex>\n              </v-layout>\n            </v-card-title>\n            <v-divider></v-divider>\n          </v-card>\n        </v-list>\n      </v-card>\n    </v-card>\n  </div>\n</template>\n<script>\nimport { mapActions, mapGetters, mapState, mapMutations } from \"vuex\";\nimport { characterMatchRoute } from \"@/script/utils\";\nexport default {\n  data: () => {\n    return {\n      inputValue: null,\n      matchedRouters: []\n    };\n  },\n  computed: {\n    ...mapState([\"searchBarStatus\", \"globalRouters\"])\n  },\n  watch: {\n    inputValue(val) {\n      this.matchedRouters = characterMatchRoute(`${val}路`);\n    }\n  },\n  methods: {\n    ...mapActions([\"changeSearchBarState\", \"viewConversion\"]),\n    ...mapMutations([\"addRouters\", \"stickyRouter\", \"checkDuplicateRoute\"]),\n    clickEventProcess(routerInfo) {\n      this.changeSearchBarState();\n      if (this.checkDuplicateRoute(routerInfo.Id)) {\n        this.stickyRouter(routerInfo);\n      } else {\n        this.addRouters(routerInfo);\n      }\n      let opts = {\n        handle: \"push\",\n        params: { name: \"details\", params: routerInfo }\n      }\n      this.viewConversion(opts);\n    },\n    checkDuplicateRoute(id) {\n      return this.globalRouters.some(route => route.Id === id)\n    }\n  }\n};\n</script>\n<style>\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 999;\n}\n.search_modal_wrap {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  top: 2.09vh;\n  left: 2.09vh;\n  right: 2.09vh;\n}\n.v-list {\n  padding: 0;\n}\n.v-text-field {\n  padding-top: 5px;\n}\n.search_bar {\n  display: flex;\n}\n.search_result_wrap {\n  height: 6.53vh;\n}\n.arrow_forward_icon {\n  position: relative;\n  bottom: 0.32vh;\n}\n\n.router_time_info_container {\n}\n</style>\n"],"sourceRoot":"src/components"}]}