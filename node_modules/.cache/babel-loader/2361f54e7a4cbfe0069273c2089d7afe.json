{"remainingRequest":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js!/home/crax/Code/ZhuHaiBus-PWA/node_modules/vuetify-loader/lib/loader.js!/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/crax/Code/ZhuHaiBus-PWA/src/page/details/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/crax/Code/ZhuHaiBus-PWA/src/page/details/index.vue","mtime":1550829488970},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1550211689884},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js","mtime":1550211689805},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vuetify-loader/lib/loader.js","mtime":1550211707105},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1550211689884},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js","mtime":1550211706840}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"/home/crax/Code/ZhuHaiBus-PWA/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters, mapMutations, mapState } from \"vuex\";\nimport { requestRealTimeData } from \"@/script/request\";\nimport { filterObj, queryAnotherRoute, isNullObject, isNullArray } from \"@/script/utils\";\nexport default {\n  data: function data() {\n    return {\n      error_snackbar: false,\n      timeout: 3000,\n      loading: false,\n      requestIcon: \"none\",\n      errorMsg: \"Timeout Retry\",\n      intervalId: \"\",\n      realtimeData: [],\n      updateIntervalSecend: 5\n    };\n  },\n  computed: _objectSpread({}, mapState([\"globalRouters\"]), {\n    routerInfo: function routerInfo() {\n      return this.$route.params;\n    }\n  }),\n  watch: {\n    loading: function loading(val) {\n      var _this = this;\n\n      if (!val) {\n        this.requestIcon = \"done\";\n        setTimeout(function () {\n          return _this.requestIcon = \"none\";\n        }, 1000);\n      }\n    },\n    routerInfo: function routerInfo(val) {\n      this.clearRealtimeData();\n      this.updateViewRealtimeData();\n    }\n  },\n  methods: _objectSpread({}, mapActions([\"viewReturn\", \"viewConversion\"]), mapMutations([\"reverseRouter\"]), {\n    getStopBusQuantity: function getStopBusQuantity(stopName) {\n      return this.realtimeData.filter(function (info) {\n        return info.name === stopName;\n      });\n    },\n    checkResponseMatch: function checkResponseMatch(_ref) {\n      var Id = _ref.Id;\n      return this.routerInfo.Id === Id;\n    },\n    showError: function showError(e) {\n      this.errorMsg = e;\n      this.error_snackbar = true;\n    },\n    iconShowJudge: function iconShowJudge(name, genre) {\n      var busQuantityArray = this.getStopBusQuantity(name);\n\n      if (!isNullArray(busQuantityArray)) {\n        return busQuantityArray.filter(function (busInfo) {\n          return busInfo.busState === genre;\n        }).length;\n      }\n\n      return false;\n    },\n    reverse: function reverse() {\n      var params = this.$route.params;\n      var anotherRouter = queryAnotherRoute(params);\n\n      if (anotherRouter.length) {\n        this.reverseRouter(params);\n        var opts = {\n          handle: \"replace\",\n          params: {\n            name: \"details\",\n            params: anotherRouter[0]\n          }\n        };\n        this.viewConversion(opts);\n      }\n    },\n    createRequest: function createRequest(routerInfo) {\n      return requestRealTimeData(routerInfo);\n    },\n    updateViewRealtimeData: function updateViewRealtimeData() {\n      var _this2 = this;\n\n      var opts = this.routerInfo;\n\n      if (!isNullObject(opts)) {\n        this.loading = true;\n        return this.createRequest(opts).then(function (result) {\n          if (_this2.checkResponseMatch(opts)) {\n            _this2.loading = false;\n            _this2.realtimeData = result.data;\n          }\n        });\n      }\n    },\n    startInterval: function startInterval() {\n      this.intervalId = setInterval(function (self) {\n        self.updateViewRealtimeData();\n      }, this.updateIntervalSecend * 1000, this);\n    },\n    clearInterval: function (_clearInterval) {\n      function clearInterval() {\n        return _clearInterval.apply(this, arguments);\n      }\n\n      clearInterval.toString = function () {\n        return _clearInterval.toString();\n      };\n\n      return clearInterval;\n    }(function () {\n      clearInterval(this.intervalId);\n    }),\n    clearRealtimeData: function clearRealtimeData() {\n      this.realtimeData = [];\n    }\n  }),\n  mounted: function mounted() {\n    this.updateViewRealtimeData();\n    this.startInterval();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearInterval();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-toolbar fixed>\n      <v-toolbar-side-icon @click=\"viewReturn\">\n        <v-icon>arrow_back</v-icon>\n      </v-toolbar-side-icon>\n      <div>\n        <div class=\"body-2\">{{$route.params.Name }}({{ realtimeData.length }}辆车正在行驶)</div>\n        <span class=\"body-1\">{{ $route.params.FromStation }}</span>\n        <v-icon small class=\"arrow_forward_icon\">arrow_forward</v-icon>\n        <span class=\"body-1\">{{ $route.params.ToStation }}</span>\n      </div>\n      <v-spacer></v-spacer>\n      <v-btn icon :loading=\"loading\">\n        <v-fade-transition>\n          <v-icon>{{ requestIcon }}</v-icon>\n        </v-fade-transition>\n      </v-btn>\n      <v-btn icon @click=\"reverse\">\n        <v-icon>swap_horiz</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-timeline align-top dense class=\"timeline_wrap\">\n      <v-timeline-item fill-dot small v-for=\"(stop, index) in $route.params.stops\" :key=\"index\">\n        <v-layout pt-3>\n          <v-flex xs3>\n            <v-fade-transition>\n              <v-tooltip bottom>\n                <v-badge\n                  small\n                  right\n                  slot=\"activator\"\n                  v-if=\"realtimeData.length && iconShowJudge(stop.Name, true)\"\n                >\n                  <span slot=\"badge\">{{ iconShowJudge(stop.Name, true) }}</span>\n                  <v-icon>directions_bus</v-icon>\n                </v-badge>\n              </v-tooltip>\n            </v-fade-transition>\n          </v-flex>\n          <v-fade-transition>\n            <v-flex class=\"driveout_icon_wrapper\">\n              <v-badge small right v-if=\"realtimeData.length && iconShowJudge(stop.Name, false)\">\n                <span slot=\"badge\">{{ iconShowJudge(stop.Name, false) }}</span>\n                <v-icon>directions_bus</v-icon>\n              </v-badge>\n            </v-flex>\n          </v-fade-transition>\n          <v-flex>\n            <strong>{{ stop.Name }}</strong>\n          </v-flex>\n        </v-layout>\n      </v-timeline-item>\n    </v-timeline>\n    <v-snackbar color=\"error\" :timeout=\"timeout\" v-model=\"error_snackbar\">\"Timeout Retry\"\n      <v-btn dark flat @click=\"error_snackbar = false\">Close</v-btn>\n    </v-snackbar>\n  </v-app>\n</template>\n<script>\nimport { mapActions, mapGetters, mapMutations, mapState } from \"vuex\";\nimport { requestRealTimeData } from \"@/script/request\";\nimport {\n  filterObj,\n  queryAnotherRoute,\n  isNullObject,\n  isNullArray\n} from \"@/script/utils\";\nexport default {\n  data: () => ({\n    error_snackbar: false,\n    timeout: 3000,\n    loading: false,\n    requestIcon: \"none\",\n    errorMsg: \"Timeout Retry\",\n    intervalId: \"\",\n    realtimeData: [],\n    updateIntervalSecend: 5\n  }),\n  computed: {\n    ...mapState([\"globalRouters\"]),\n    routerInfo() {\n      return this.$route.params;\n    }\n  },\n  watch: {\n    loading(val) {\n      if (!val) {\n        this.requestIcon = \"done\";\n        setTimeout(() => (this.requestIcon = \"none\"), 1000);\n      }\n    },\n    routerInfo(val) {\n      this.clearRealtimeData();\n      this.updateViewRealtimeData();\n    }\n  },\n  methods: {\n    ...mapActions([\"viewReturn\", \"viewConversion\"]),\n    ...mapMutations([\"reverseRouter\"]),\n    getStopBusQuantity(stopName) {\n      return this.realtimeData.filter(info => info.name === stopName);\n    },\n    checkResponseMatch({ Id }) {\n      return this.routerInfo.Id === Id;\n    },\n    showError(e) {\n      this.errorMsg = e;\n      this.error_snackbar = true;\n    },\n    iconShowJudge(name, genre) {\n      let busQuantityArray = this.getStopBusQuantity(name);\n      if (!isNullArray(busQuantityArray)) {\n        return busQuantityArray.filter(busInfo => busInfo.busState === genre)\n          .length;\n      }\n      return false;\n    },\n    reverse() {\n      let params = this.$route.params;\n      let anotherRouter = queryAnotherRoute(params);\n      if (anotherRouter.length) {\n        this.reverseRouter(params);\n        let opts = {\n          handle: \"replace\",\n          params: {\n            name: \"details\",\n            params: anotherRouter[0]\n          }\n        };\n        this.viewConversion(opts);\n      }\n    },\n    createRequest(routerInfo) {\n      return requestRealTimeData(routerInfo);\n    },\n    updateViewRealtimeData() {\n      let opts = this.routerInfo;\n      if (!isNullObject(opts)) {\n        this.loading = true;\n        return this.createRequest(opts).then(result => {\n          if (this.checkResponseMatch(opts)) {\n            this.loading = false;\n            this.realtimeData = result.data;\n          }\n        });\n      }\n    },\n    startInterval() {\n      this.intervalId = setInterval(\n        self => {\n          self.updateViewRealtimeData();\n        },\n        this.updateIntervalSecend * 1000,\n        this\n      );\n    },\n    clearInterval() {\n      clearInterval(this.intervalId);\n    },\n    clearRealtimeData() {\n      this.realtimeData = [];\n    }\n  },\n  mounted() {\n    this.updateViewRealtimeData();\n    this.startInterval();\n  },\n  beforeDestroy() {\n    this.clearInterval();\n  }\n};\n</script>\n<style scoped>\n.toolbar_titl {\n  flex-direction: column;\n  justify-content: center;\n}\n.timeline_wrap {\n  margin-top: 55px;\n}\n.toolbar_titl > span {\n  size: 1.5rem;\n}\n.driveout_icon_wrapper {\n  position: absolute;\n  top: 45px;\n}\n</style>"],"sourceRoot":"src/page/details"}]}