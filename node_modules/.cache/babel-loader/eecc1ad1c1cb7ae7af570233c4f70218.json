{"remainingRequest":"/home/crax/Code/zhuhaibus/node_modules/thread-loader/dist/cjs.js!/home/crax/Code/zhuhaibus/node_modules/babel-loader/lib/index.js!/home/crax/Code/zhuhaibus/node_modules/vuetify-loader/lib/loader.js!/home/crax/Code/zhuhaibus/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/crax/Code/zhuhaibus/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/crax/Code/zhuhaibus/src/components/Card/BasicInfoCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/crax/Code/zhuhaibus/src/components/Card/BasicInfoCard.vue","mtime":1546605877732},{"path":"/home/crax/Code/zhuhaibus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/crax/Code/zhuhaibus/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/crax/Code/zhuhaibus/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/crax/Code/zhuhaibus/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/home/crax/Code/zhuhaibus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/crax/Code/zhuhaibus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/crax/Code/zhuhaibus/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 单向线路406 407 Z103 Z105 Z107 Z116 Z117 Z121A Z261 Z265 Z267 Z16 Z56 Z75 Z76 101\nimport { setTimeout } from 'timers';\nexport default {\n  props: ['msg'],\n  components: {\n    StationList: function StationList() {\n      return import('./StationList');\n    }\n  },\n  data: function data() {\n    return {\n      lineDetails: this.msg,\n      showMore: false,\n      load: false,\n      disabledState: true\n    };\n  },\n  computed: {\n    judgeDisabledState: function judgeDisabledState() {\n      return this.lineDetails.direction && this.disabledState && !this.load;\n    }\n  },\n  methods: {\n    mergeData: function mergeData(realTimeData) {\n      this.clearRealData();\n      this.lineDetails.stations.forEach(function (station) {\n        realTimeData.forEach(function (item) {\n          if (station.Name === item.name) {\n            if (item.state) {\n              station.driveInBusNumber.push(item);\n            } else {\n              station.driveOutBusNumber.push(item);\n            }\n          }\n        });\n      });\n    },\n    clearRealData: function clearRealData() {\n      this.lineDetails.stations.forEach(function (station) {\n        station.driveInBusNumber = [];\n        station.driveOutBusNumber = [];\n      });\n    },\n    changeLineDirection: function changeLineDirection() {\n      var _this = this;\n\n      this.$http.getLineDetails(this.lineDetails.reverseLineInfo).then(function (details) {\n        _this.$http.getStationsList(details[0]).then(function (stationArray) {\n          _this.lineDetails = _objectSpread({}, details[0], {\n            stations: stationArray\n          });\n\n          _this.updateRealTimeData();\n        });\n      });\n    },\n    updateRealTimeData: function updateRealTimeData() {\n      var _this2 = this;\n\n      this.load = true;\n      this.$http.getRealTimeData(this.lineDetails).then(function (response) {\n        _this2.mergeData(response);\n\n        setTimeout(function (self) {\n          self.load = false;\n        }, 2000, _this2);\n      });\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.$http.getStationsList(this.lineDetails).then(function (response) {\n      _this3.lineDetails.stations = response;\n\n      _this3.updateRealTimeData();\n    });\n  }\n};",{"version":3,"sources":["BasicInfoCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AAEA,SAAA,UAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,KAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AAAA,aAAA,OAAA,eAAA,CAAA;AAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KAAA,GADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA,KAHA;AAIA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,aAAA,KAAA,WAAA,CAAA,SAAA,IAAA,KAAA,aAAA,IAAA,CAAA,KAAA,IAAA;AACA;AAHA,GAbA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,YADA,EACA;AACA,WAAA,aAAA;AACA,WAAA,WAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,OAAA,CAAA,IAAA,KAAA,IAAA,CAAA,IAAA,EAAA;AACA,gBAAA,IAAA,CAAA,KAAA,EAAA;AACA,cAAA,OAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,IAAA;AACA,aAFA,MAEA;AACA,cAAA,OAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA;AACA,SARA;AASA,OAVA;AAWA,KAdA;AAeA,IAAA,aAfA,2BAeA;AACA,WAAA,WAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,OAAA,CAAA,gBAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,iBAAA,GAAA,EAAA;AACA,OAHA;AAIA,KApBA;AAqBA,IAAA,mBArBA,iCAqBA;AAAA;;AACA,WAAA,KAAA,CACA,cADA,CACA,KAAA,WAAA,CAAA,eADA,EAEA,IAFA,CAEA,UAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,eAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,UAAA,YAAA,EAAA;AACA,UAAA,KAAA,CAAA,WAAA,qBACA,OAAA,CAAA,CAAA,CADA;AAEA,YAAA,QAAA,EAAA;AAFA;;AAKA,UAAA,KAAA,CAAA,kBAAA;AACA,SAPA;AAQA,OAXA;AAYA,KAlCA;AAmCA,IAAA,kBAnCA,gCAmCA;AAAA;;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,eAAA,CAAA,KAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA,CAAA,QAAA;;AACA,QAAA,UAAA,CACA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,GAAA,KAAA;AACA,SAHA,EAIA,IAJA,EAKA,MALA,CAAA;AAOA,OATA;AAUA;AA/CA,GAnBA;AAqEA,EAAA,OArEA,qBAqEA;AAAA;;AACA,SAAA,KAAA,CAAA,eAAA,CAAA,KAAA,WAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,WAAA,CAAA,QAAA,GAAA,QAAA;;AACA,MAAA,MAAA,CAAA,kBAAA;AACA,KAHA;AAIA;AA1EA,CAAA","sourcesContent":["<template>\n  <v-container grid-list-md>\n    <v-card class=\"line_card\">\n      <div class=\"line_card_info_wrap\">\n        <div class=\"line_title_wrap\">\n          <h3 class=\"line_title\">{{ lineDetails.lineNumber }}</h3>\n          <span>开往 {{ lineDetails.terminal }}</span>\n        </div>\n        <div class=\"line_card_actions_wrap\">\n          <v-btn\n            :class=\"{loading: load}\"\n            class=\"sync\"\n            color=\"grey\"\n            flat\n            icon\n            :disabled=\"load\"\n            @click=\"updateRealTimeData\"\n          >\n            <v-icon>sync</v-icon>\n          </v-btn>\n\n          <v-btn\n            flat\n            icon\n            color=\"grey\"\n            style=\"margin: 0 auto\"\n            :disabled=\"!judgeDisabledState\"\n            @click=\"changeLineDirection\"\n          >\n            <v-icon>swap_horiz</v-icon>\n          </v-btn>\n          <v-btn flat icon color=\"grey\" style=\"margin: 0 auto\" @click=\"showMore = !showMore\">\n            <v-icon>{{showMore ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}}</v-icon>\n          </v-btn>\n        </div>\n      </div>\n      <v-divider></v-divider>\n      <v-slide-y-transition>\n        <div class=\"overflow\" v-if=\"lineDetails.stations !== undefined\" v-show=\"showMore\">\n          <div class=\"timeline\"></div>\n          <StationList v-for=\"(item, index) in lineDetails.stations\" :datamsg=\"item\" :key=\"index\"></StationList>\n        </div>\n      </v-slide-y-transition>\n    </v-card>\n  </v-container>\n</template>\n<script>\n// 单向线路406 407 Z103 Z105 Z107 Z116 Z117 Z121A Z261 Z265 Z267 Z16 Z56 Z75 Z76 101\n\nimport { setTimeout } from 'timers';\n\nexport default {\n  props: ['msg'],\n  components: {\n    StationList: () => import('./StationList'),\n  },\n  data() {\n    return {\n      lineDetails: this.msg,\n      showMore: false,\n      load: false,\n      disabledState: true,\n    };\n  },\n  computed: {\n    judgeDisabledState() {\n      return this.lineDetails.direction && this.disabledState && !this.load;\n    },\n  },\n\n  methods: {\n    mergeData(realTimeData) {\n      this.clearRealData();\n      this.lineDetails.stations.forEach((station) => {\n        realTimeData.forEach((item) => {\n          if (station.Name === item.name) {\n            if (item.state) {\n              station.driveInBusNumber.push(item);\n            } else {\n              station.driveOutBusNumber.push(item);\n            }\n          }\n        });\n      });\n    },\n    clearRealData() {\n      this.lineDetails.stations.forEach((station) => {\n        station.driveInBusNumber = [];\n        station.driveOutBusNumber = [];\n      });\n    },\n    changeLineDirection() {\n      this.$http\n        .getLineDetails(this.lineDetails.reverseLineInfo)\n        .then((details) => {\n          this.$http.getStationsList(details[0]).then((stationArray) => {\n            this.lineDetails = {\n              ...details[0],\n              stations: stationArray,\n            };\n\n            this.updateRealTimeData();\n          });\n        });\n    },\n    updateRealTimeData() {\n      this.load = true;\n      this.$http.getRealTimeData(this.lineDetails).then((response) => {\n        this.mergeData(response);\n        setTimeout(\n          (self) => {\n            self.load = false;\n          },\n          2000,\n          this,\n        );\n      });\n    },\n  },\n\n  created() {\n    this.$http.getStationsList(this.lineDetails).then((response) => {\n      this.lineDetails.stations = response;\n      this.updateRealTimeData();\n    });\n  },\n};\n</script>\n\n<style lang=\"css\" scoped>\n.container {\n  padding: 6px;\n}\n\n.line_card {\n  margin: 10px 0;\n  border-radius: 5px;\n}\n\n.line_card_info_wrap {\n  display: flex;\n  justify-content: space-between;\n  min-height: 80px;\n  padding: 10px;\n}\n\n.line_card_actions_wrap {\n  display: flex;\n  align-items: center;\n}\n\n.line_title_wrap {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.line_title_wrap > span {\n  text-align: center;\n  font-size: 12px;\n}\n\n.overflow {\n  max-height: 350px;\n  overflow: auto;\n  overflow-x: hidden;\n  padding: 20px 10px;\n}\n\n.test_icon {\n  position: absolute;\n  left: 0;\n  top: 30px;\n}\n\n.icon_forward {\n}\n\nul {\n  position: relative;\n  padding-top: 20px;\n}\n\n.station_wrap {\n  display: flex;\n  min-height: 50px;\n  list-style-type: disc;\n}\n\n.drive_out_bus_icon {\n  position: absolute;\n  left: 0;\n  top: 24px;\n}\n\n.station_name_wrap {\n  left: 24px;\n}\n\n.station_details_wrap {\n}\n\n@keyframes rotation {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.loading {\n  animation: rotation 0.6s linear infinite;\n}\n</style>\n"],"sourceRoot":"src/components/Card"}]}