{"remainingRequest":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js!/home/crax/Code/ZhuHaiBus-PWA/src/script/RequestMudule.js","dependencies":[{"path":"/home/crax/Code/ZhuHaiBus-PWA/src/script/RequestMudule.js","mtime":1547541729732},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1546870092283},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js","mtime":1546870092233}],"contextDependencies":[],"result":["import _Promise from \"/home/crax/Code/ZhuHaiBus-PWA/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport axios from \"axios\";\nvar prefix = \"https://api.clive.site\";\naxios.defaults.baseURL = prefix;\naxios.defaults.timeout = 1000;\n/* axios.defaults.withCredentials =  true\naxios.defaults.headers = {\n  \"version\": \"1.0\"\n} */\n\naxios.defaults.retry = 2;\naxios.interceptors.response.use(function (response) {\n  return response.data;\n}, function (err) {\n  //错误重试\n  var config = err.config;\n  if (!config || !config.retry) return _Promise.reject(err);\n  config.__retryCount = config.__retryCount || 0;\n\n  if (config.__retryCount >= config.retry) {\n    return _Promise.reject(err);\n  }\n\n  config.__retryCount += 1;\n  return axios(config);\n});\n\nfunction _RequestData(urlPath) {\n  return axios.get(urlPath);\n}\n\nfunction getVersion() {\n  return _RequestData(\"/version\");\n}\n/* \nfunction getStationsList({ id }) {\n  return _RequestData(`${prefix}/stations/${id}`).then(response => response.map(station => ({\n    ...station,\n    driveInBusNumber: [],\n    driveOutBusNumber: [],\n  })));\n}\n\nfunction getRealTimeData({ id, lineNumber, originStation }) {\n  return _RequestData(\n    `${prefix}/realtime/${id}&${encodeURI(lineNumber)}&${encodeURI(originStation)}`,\n  );\n}\nfunction getLineDetails({ id, lineNumber }) {\n  return _RequestData(`${prefix}/details/${id}&${encodeURI(lineNumber)}`);\n}\n*/\n\n\nexport default {\n  getVersion: getVersion\n  /*  getRealTimeData,\n  getLineDetails */\n\n};",{"version":3,"sources":["/home/crax/Code/ZhuHaiBus-PWA/src/script/RequestMudule.js"],"names":["axios","prefix","defaults","baseURL","timeout","retry","interceptors","response","use","data","err","config","reject","__retryCount","_RequestData","urlPath","get","getVersion"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,MAAM,GAAG,wBAAf;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyBF,MAAzB;AACAD,KAAK,CAACE,QAAN,CAAeE,OAAf,GAAyB,IAAzB;AACA;;;;;AAIAJ,KAAK,CAACE,QAAN,CAAeG,KAAf,GAAuB,CAAvB;AAEAL,KAAK,CAACM,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACE,UAAAD,QAAQ;AAAA,SAAIA,QAAQ,CAACE,IAAb;AAAA,CADV,EAEE,UAAAC,GAAG,EAAI;AACL;AACA,MAAIC,MAAM,GAAGD,GAAG,CAACC,MAAjB;AACA,MAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACN,KAAvB,EAA8B,OAAO,SAAQO,MAAR,CAAeF,GAAf,CAAP;AAC9BC,EAAAA,MAAM,CAACE,YAAP,GAAsBF,MAAM,CAACE,YAAP,IAAuB,CAA7C;;AAEA,MAAIF,MAAM,CAACE,YAAP,IAAuBF,MAAM,CAACN,KAAlC,EAAyC;AACvC,WAAO,SAAQO,MAAR,CAAeF,GAAf,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACE,YAAP,IAAuB,CAAvB;AACA,SAAOb,KAAK,CAACW,MAAD,CAAZ;AACD,CAdH;;AAiBA,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAOf,KAAK,CAACgB,GAAN,CAAUD,OAAV,CAAP;AACD;;AACD,SAASE,UAAT,GAAsB;AACpB,SAAOH,YAAY,CAAC,UAAD,CAAnB;AACD;AACD;;;;;;;;;;;;;;;;;;;;AAkBA,eAAe;AACbG,EAAAA,UAAU,EAAVA;AACA;;;AAFa,CAAf","sourcesContent":["import axios from \"axios\";\nconst prefix = \"https://api.clive.site\";\naxios.defaults.baseURL = prefix;\naxios.defaults.timeout = 1000;\n/* axios.defaults.withCredentials =  true\naxios.defaults.headers = {\n  \"version\": \"1.0\"\n} */\naxios.defaults.retry = 2;\n\naxios.interceptors.response.use(\n  response => response.data,\n  err => {\n    //错误重试\n    var config = err.config;\n    if (!config || !config.retry) return Promise.reject(err);\n    config.__retryCount = config.__retryCount || 0;\n\n    if (config.__retryCount >= config.retry) {\n      return Promise.reject(err);\n    }\n\n    config.__retryCount += 1;\n    return axios(config);\n  }\n);\n\nfunction _RequestData(urlPath) {\n  return axios.get(urlPath);\n}\nfunction getVersion() {\n  return _RequestData(\"/version\");\n}\n/* \nfunction getStationsList({ id }) {\n  return _RequestData(`${prefix}/stations/${id}`).then(response => response.map(station => ({\n    ...station,\n    driveInBusNumber: [],\n    driveOutBusNumber: [],\n  })));\n}\n\nfunction getRealTimeData({ id, lineNumber, originStation }) {\n  return _RequestData(\n    `${prefix}/realtime/${id}&${encodeURI(lineNumber)}&${encodeURI(originStation)}`,\n  );\n}\nfunction getLineDetails({ id, lineNumber }) {\n  return _RequestData(`${prefix}/details/${id}&${encodeURI(lineNumber)}`);\n}\n*/\nexport default {\n  getVersion\n  /*  getRealTimeData,\n  getLineDetails */\n};\n"]}]}