{"remainingRequest":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/crax/Code/ZhuHaiBus-PWA/src/page/details/index.vue?vue&type=style&index=0&id=0b13f8ec&scoped=true&lang=css&","dependencies":[{"path":"/home/crax/Code/ZhuHaiBus-PWA/src/page/details/index.vue","mtime":1550829532444},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/css-loader/index.js","mtime":1550211690019},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1550211706840},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/postcss-loader/src/index.js","mtime":1550211700490},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vuetify-loader/lib/loader.js","mtime":1550211707105},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1550211689884},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js","mtime":1550211706840}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.toolbar_titl {\n  flex-direction: column;\n  justify-content: center;\n}\n.timeline_wrap {\n  margin-top: 55px;\n}\n.toolbar_titl > span {\n  size: 1.5rem;\n}\n.driveout_icon_wrapper {\n  position: absolute;\n  top: 45px;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/details","sourcesContent":["<template>\n  <v-app>\n    <v-toolbar fixed>\n      <v-toolbar-side-icon @click=\"viewReturn\">\n        <v-icon>arrow_back</v-icon>\n      </v-toolbar-side-icon>\n      <div>\n        <div class=\"body-2\">{{$route.params.Name }}({{ realtimeData.length }}辆车正在行驶)</div>\n        <span class=\"body-1\">{{ $route.params.FromStation }}</span>\n        <v-icon small class=\"arrow_forward_icon\">arrow_forward</v-icon>\n        <span class=\"body-1\">{{ $route.params.ToStation }}</span>\n      </div>\n      <v-spacer></v-spacer>\n      <v-btn icon :loading=\"loading\">\n        <v-fade-transition>\n          <v-icon>{{ requestIcon }}</v-icon>\n        </v-fade-transition>\n      </v-btn>\n      <v-btn icon @click=\"reverse\">\n        <v-icon>swap_horiz</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-timeline align-top dense class=\"timeline_wrap\">\n      <v-timeline-item fill-dot small v-for=\"(stop, index) in $route.params.stops\" :key=\"index\">\n        <v-layout pt-3>\n          <v-flex xs3>\n            <v-fade-transition>\n              <v-tooltip bottom>\n                <v-badge\n                  small\n                  right\n                  slot=\"activator\"\n                  v-if=\"realtimeData.length && iconShowJudge(stop.Name, true)\"\n                >\n                  <span slot=\"badge\">{{ iconShowJudge(stop.Name, true) }}</span>\n                  <v-icon>directions_bus</v-icon>\n                </v-badge>\n              </v-tooltip>\n            </v-fade-transition>\n          </v-flex>\n          <v-fade-transition>\n            <v-flex class=\"driveout_icon_wrapper\">\n              <v-badge small right v-if=\"realtimeData.length && iconShowJudge(stop.Name, false)\">\n                <span slot=\"badge\">{{ iconShowJudge(stop.Name, false) }}</span>\n                <v-icon>directions_bus</v-icon>\n              </v-badge>\n            </v-flex>\n          </v-fade-transition>\n          <v-flex>\n            <strong>{{ stop.Name }}</strong>\n          </v-flex>\n        </v-layout>\n      </v-timeline-item>\n    </v-timeline>\n    <v-snackbar color=\"error\" :timeout=\"timeout\" v-model=\"error_snackbar\">\"Timeout Retry\"\n      <v-btn dark flat @click=\"error_snackbar = false\">Close</v-btn>\n    </v-snackbar>\n  </v-app>\n</template>\n<script>\nimport { mapActions, mapGetters, mapMutations, mapState } from \"vuex\";\nimport { requestRealTimeData } from \"@/script/request\";\nimport {\n  filterObj,\n  queryAnotherRoute,\n  isNullObject,\n  isNullArray\n} from \"@/script/utils\";\nexport default {\n  data: () => ({\n    error_snackbar: false,\n    timeout: 3000,\n    loading: false,\n    requestIcon: \"none\",\n    errorMsg: \"Timeout Retry\",\n    intervalId: \"\",\n    realtimeData: [],\n    updateIntervalSecend: 5\n  }),\n  computed: {\n    ...mapState([\"globalRouters\"]),\n    routerInfo() {\n      return this.$route.params;\n    }\n  },\n  watch: {\n    loading(val) {\n      if (!val) {\n        this.requestIcon = \"done\";\n        setTimeout(() => (this.requestIcon = \"none\"), 1000);\n      }\n    },\n    routerInfo(val) {\n      this.clearRealtimeData();\n      this.updateViewRealtimeData();\n    }\n  },\n  methods: {\n    ...mapActions([\"viewReturn\", \"viewConversion\"]),\n    ...mapMutations([\"reverseRouter\"]),\n    getStopBusQuantity(stopName) {\n      return this.realtimeData.filter(info => info.name === stopName);\n    },\n    checkResponseMatch({ Id }) {\n      return this.routerInfo.Id === Id;\n    },\n    showError(e) {\n      this.errorMsg = e;\n      this.error_snackbar = true;\n    },\n    iconShowJudge(name, genre) {\n      let busQuantityArray = this.getStopBusQuantity(name);\n      if (!isNullArray(busQuantityArray)) {\n        return busQuantityArray.filter(busInfo => busInfo.busState === genre)\n          .length;\n      }\n      return false;\n    },\n    reverse() {\n      let params = this.$route.params;\n      let anotherRouter = queryAnotherRoute(params);\n      if (anotherRouter.length) {\n        this.reverseRouter(params);\n        let opts = {\n          handle: \"replace\",\n          params: {\n            name: \"details\",\n            params: anotherRouter[0]\n          }\n        };\n        this.viewConversion(opts);\n      }\n    },\n    createRequest(routerInfo) {\n      return requestRealTimeData(routerInfo);\n    },\n    updateViewRealtimeData() {\n      let opts = this.routerInfo;\n      if (!isNullObject(opts)) {\n        this.loading = true;\n        return this.createRequest(opts).then(result => {\n          if (this.checkResponseMatch(opts)) {\n            this.loading = false;\n            this.realtimeData = result.data;\n          }\n        });\n      }\n    },\n    startInterval() {\n      this.intervalId = setInterval(\n        self => {\n          self.updateViewRealtimeData();\n        },\n        this.updateIntervalSecend * 1000,\n        this\n      );\n    },\n    clearInterval() {\n      clearInterval(this.intervalId);\n    },\n    clearRealtimeData() {\n      this.realtimeData = [];\n    }\n  },\n  mounted() {\n    this.updateViewRealtimeData();\n    this.startInterval();\n  },\n  beforeDestroy() {\n    this.clearInterval();\n  }\n};\n</script>\n<style scoped>\n.toolbar_titl {\n  flex-direction: column;\n  justify-content: center;\n}\n.timeline_wrap {\n  margin-top: 55px;\n}\n.toolbar_titl > span {\n  size: 1.5rem;\n}\n.driveout_icon_wrapper {\n  position: absolute;\n  top: 45px;\n}\n</style>"]}]}