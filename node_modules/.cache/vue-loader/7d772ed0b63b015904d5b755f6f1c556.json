{"remainingRequest":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/crax/Code/ZhuHaiBus-PWA/src/components/Index/card.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/crax/Code/ZhuHaiBus-PWA/src/components/Index/card.vue","mtime":1549193507776},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1546870092283},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js","mtime":1546870092233},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vuetify-loader/lib/loader.js","mtime":1546870102026},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1546870092283},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js","mtime":1546870101180}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ContentLoader } from \"vue-content-loader\";\nimport { mapState, mapGetters, mapMutations } from \"vuex\";\nexport default {\n  components: {\n    ContentLoader\n  },\n  props: [\"router\"],\n  computed: {\n    ...mapState([\"favoriteRouters\"]),\n    ...mapGetters([\"recentStop\", \"calculatePageOffset\"]),\n    hasCollection() {\n        return this.favoriteRouters.find(router => router.id === this.router.id)\n    }\n  },\n  data: () => ({\n    star: false\n  }),\n  methods: {\n    ...mapMutations([\"transformRouter\", \"addRouterToFavoriteRouters\", \"removeRouterFromFavoriteRouters\"]),\n    switchingRouter() {\n      this.$router.push({\n        name: \"details\",\n        params: {\n          recentStopId: this.recentStop.id,\n          routerInfo: this.router\n        }\n      });\n    },\n    changeRouterStatusOnfavoriteRouters() {\n        if(this.hasCollection) this.removeRouterFromFavoriteRouters(this.router);\n        else {\n            this.addRouterToFavoriteRouters(this.router)\n        }\n    },\n    conversionRouterDirection() {\n      this.$work.postMessage({\n        flag: \"queryRouterByRouterNumber\",\n        data: this.router.routerNumber\n      });\n\n      this.$work.onmessage = ({ data }) => {\n        this.transformRouter({\n          newRouter: data.filter(({ id }) => id !== this.router.id),\n          oldRouter: this.router\n        });\n      };\n    }\n  },\n  watch: {\n    star(newStatus) {\n        if(newStatus && !this.hasCollection) \n            this.addRouterToFavoriteRouters(this.router);\n        else if(this.hasCollection) {\n            this.removeRouterFromFavoriteRouters(this.router)\n        }  \n    }\n  },\n  mounted() {\n\n  }\n};\n",{"version":3,"sources":["card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"card.vue","sourceRoot":"src/components/Index","sourcesContent":["<template>\n  <v-card flat class=\"line_card\" @click=\"switchingRouter\" v-if=\"true\">\n    <v-card-title>\n      <div>\n        <h3 class=\"card_font_title\">{{ router.routerNumber }}è·¯</h3>\n        <div>\n          <span class=\"card_font_body\">{{ router.start_stop }}</span>\n          <v-icon>arrow_forward</v-icon>\n          <span class=\"card_font_body\">{{ router.end_stop }}</span>\n        </div>\n      </div>\n    </v-card-title>\n    <v-spacer></v-spacer>\n    <v-card-actions class=\"line_card_actions\">\n      <v-btn icon @click.stop=\"\">\n        <v-icon v-if=\"false\" color=\"#ffd54f\">star</v-icon>\n        <v-icon v-else>star_border</v-icon>\n      </v-btn>\n      <v-btn icon @click.stop=\"conversionRouterDirection\">\n        <v-icon>swap_horiz</v-icon>\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n  <v-card v-else>\n    <content-loader\n      :height=\"88\"\n      :width=\"400\"\n      :speed=\"2\"\n      primaryColor=\"#c7c7c7\"\n      secondaryColor=\"#ecebeb\"\n    >\n      <rect x=\"16\" y=\"16\" rx=\"4\" ry=\"4\" width=\"40\" height=\"10.4\"/>\n      <rect x=\"16\" y=\"46\" rx=\"4\" ry=\"4\" width=\"180\" height=\"10.4\"/>\n    </content-loader>\n  </v-card>\n</template>\n<script>\nimport { ContentLoader } from \"vue-content-loader\";\nimport { mapState, mapGetters, mapMutations } from \"vuex\";\nexport default {\n  components: {\n    ContentLoader\n  },\n  props: [\"router\"],\n  computed: {\n    ...mapState([\"favoriteRouters\"]),\n    ...mapGetters([\"recentStop\", \"calculatePageOffset\"]),\n    hasCollection() {\n        return this.favoriteRouters.find(router => router.id === this.router.id)\n    }\n  },\n  data: () => ({\n    star: false\n  }),\n  methods: {\n    ...mapMutations([\"transformRouter\", \"addRouterToFavoriteRouters\", \"removeRouterFromFavoriteRouters\"]),\n    switchingRouter() {\n      this.$router.push({\n        name: \"details\",\n        params: {\n          recentStopId: this.recentStop.id,\n          routerInfo: this.router\n        }\n      });\n    },\n    changeRouterStatusOnfavoriteRouters() {\n        if(this.hasCollection) this.removeRouterFromFavoriteRouters(this.router);\n        else {\n            this.addRouterToFavoriteRouters(this.router)\n        }\n    },\n    conversionRouterDirection() {\n      this.$work.postMessage({\n        flag: \"queryRouterByRouterNumber\",\n        data: this.router.routerNumber\n      });\n\n      this.$work.onmessage = ({ data }) => {\n        this.transformRouter({\n          newRouter: data.filter(({ id }) => id !== this.router.id),\n          oldRouter: this.router\n        });\n      };\n    }\n  },\n  watch: {\n    star(newStatus) {\n        if(newStatus && !this.hasCollection) \n            this.addRouterToFavoriteRouters(this.router);\n        else if(this.hasCollection) {\n            this.removeRouterFromFavoriteRouters(this.router)\n        }  \n    }\n  },\n  mounted() {\n\n  }\n};\n</script>\n<style scoped>\n.line_card {\n  display: flex;\n}\n.line_card_actions {\n  margin-right: 16px;\n  flex-direction: column;\n}\n.card_font_body {\n  font-size: 1.25rem;\n}\n.card_font_title {\n  font-size: 1.4rem;\n}\n.skeleton {\n  background-color: lightgrey;\n  opacity: 0.5;\n}\n</style>\n\n\n"]}]}