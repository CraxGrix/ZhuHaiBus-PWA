{"remainingRequest":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/crax/Code/ZhuHaiBus-PWA/src/page/details/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/crax/Code/ZhuHaiBus-PWA/src/page/details/index.vue","mtime":1550124207171},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1546870092283},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/babel-loader/lib/index.js","mtime":1546870092233},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vuetify-loader/lib/loader.js","mtime":1546870102026},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/cache-loader/dist/cjs.js","mtime":1546870092283},{"path":"/home/crax/Code/ZhuHaiBus-PWA/node_modules/vue-loader/lib/index.js","mtime":1546870101180}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapGetters, mapMutations, mapState } from 'vuex'\nimport {requestRealTimeData} from '@/script/request'\nexport default {\n\tdata: () => ({\n\t\trouterInfo: {},\n\t\terror_snackbar: false,\n\t\ttimeout: 3000,\n\t\tloading: false,\n\t\trequestIcon: 'none',\n\t\terrorMsg: \"\",\n\t\tintervalId: \"\"\n\t}),\n\tcomputed: {\n\t\t...mapGetters([\"calculatePageOffset\"]),\n\t\t...mapState([\"routers\"])\n\t},\n\twatch: {\n\t\tloading(val) {\n\t\t\tif(!val) {\n\t\t\t\tthis.requestIcon = 'done'\n\t\t\t\tsetTimeout(() => (this.requestIcon = 'none'), 1000)\n\t\t\t}\n\t\t},\n\t\trouters(val) {\n\t\t\tthis.routerInfo = val[0][0]\n\t\t}\n\t},\n\tmethods: {\n    ...mapActions([\"viewReturn\"]),\n    ...mapMutations([\"updateRealTimeData\", \"reverseRouter\"]),\n   \tshowError(e) {\n   \t\tthis.errorMsg = e\n   \t\tthis.error_snackbar = true\n   \t},\n   \tupdate(params) {\n   \t\tthis.loading = true\n   \t\trequestRealTimeData(params)\n   \t\t.then(result => {\n   \t\t\tconsole.log(result.data)\n   \t\t\tthis.loading = false\n   \t\t\tthis.updateRealTimeData({id: params\n   .Id,data: result.data})\n   \t\t})\n   \t\t.catch(e => (this.showError(e.status)))\n   \t},\n   \tshowJudge(name, busInfo) {\n   \t\treturn busInfo[0][\"name\"] === name ? busInfo[0][\"busState\"] ? \"in\" : \"out\" : false\n\t},\n\t},\n\tmounted() {\n\t\tthis.intervalId = setInterval((self) => {\n\t\t\tself.update(self.routerInfo);\n\t\t}, 4000, this)\n\t},\n\tbeforeDestroy() {\n\t\tclearInterval(this.intervalId)\n\t}\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/details","sourcesContent":["<template>\n\t  \t<v-fade-transition>\n<v-app>\n\t<v-toolbar fixed>\n\t\t<v-toolbar-side-icon @click=\"viewReturn\">\n\t\t\t<v-icon>arrow_back</v-icon>\n\t\t</v-toolbar-side-icon>\n\t\t\t<div>\n\t\t\t\t<div class=\"body-2\">{{ routerInfo.Name }}({{ routerInfo.busQuantity }}辆车正在行驶)</div>\n\t\t\t\t\t<span class=\"body-1\">{{ routerInfo.FromStation }}</span>\n                \t<v-icon small class=\"arrow_forward_icon\">arrow_forward</v-icon>\n                \t<span class=\"body-1\">{{ routerInfo.ToStation }}</span>\t\n\t\t\t</div>\n\t\t\t<v-spacer></v-spacer>\n\t\t\t<v-btn icon :loading=\"loading\" >\n\t\t\t\t<v-fade-transition>\n\t\t\t\t<v-icon>{{ requestIcon }}</v-icon>\n\t\t\t</v-fade-transition>\n\t\t\t</v-btn>\n\t\t\t<v-btn icon @click=\"reverseRouter(routerInfo.Id)\">\n\t\t\t\t<v-icon>swap_horiz</v-icon>\n\t\t\t</v-btn>\n\t</v-toolbar>\n\t    <v-timeline align-top dense class=\"timeline_wrap\" >\n\t    \t<v-timeline-item fill-dot small v-for=\"(stop, index) in routerInfo.stops\" :key=\"index\">\n\t    <v-layout pt-3>\n          <v-flex xs3 >\n          \t<v-fade-transition>\n            <v-tooltip bottom v-if=\"stop.busInfo\">\n              <v-badge small right slot=\"activator\" v-if=\"stop.busInfo.length && showJudge(stop.Name, stop.busInfo) === 'in'\">\n                <span slot=\"badge\">{{ stop.busInfo.length }}</span>\n                <v-icon>directions_bus</v-icon>\n              </v-badge>\n            </v-tooltip>\n            </v-fade-transition>\n          </v-flex>\n          <v-fade-transition>\n          <v-flex class=\"driveout_icon_wrapper\" v-if=\"stop.busInfo\">\n            <v-badge small right v-show=\"stop.busInfo.length && showJudge(stop.Name, stop.busInfo) === 'out'\">\n              <span slot=\"badge\">{{ stop.busInfo.length }}</span>\n              <v-icon>directions_bus</v-icon>\n            </v-badge>\n          </v-flex>\n          </v-fade-transition>\n          <v-flex>\n            <strong>{{ stop.Name }}</strong>\n          </v-flex>\n        </v-layout>\n\t    </v-timeline-item>\n\t</v-timeline>\n\t<v-snackbar  color=\"error\" :timeout=\"timeout\" v-model=\"error_snackbar\">\n\t\t{{ errorMsg }}\n\t\t<v-btn\n        dark\n        flat\n        @click=\"error_snackbar = false\"\n      >\n        Close\n      </v-btn>\n\t</v-snackbar>\n\t</v-app>\n\t  \t</v-fade-transition>\n\n</template>\n<script>\nimport { mapActions, mapGetters, mapMutations, mapState } from 'vuex'\nimport {requestRealTimeData} from '@/script/request'\nexport default {\n\tdata: () => ({\n\t\trouterInfo: {},\n\t\terror_snackbar: false,\n\t\ttimeout: 3000,\n\t\tloading: false,\n\t\trequestIcon: 'none',\n\t\terrorMsg: \"\",\n\t\tintervalId: \"\"\n\t}),\n\tcomputed: {\n\t\t...mapGetters([\"calculatePageOffset\"]),\n\t\t...mapState([\"routers\"])\n\t},\n\twatch: {\n\t\tloading(val) {\n\t\t\tif(!val) {\n\t\t\t\tthis.requestIcon = 'done'\n\t\t\t\tsetTimeout(() => (this.requestIcon = 'none'), 1000)\n\t\t\t}\n\t\t},\n\t\trouters(val) {\n\t\t\tthis.routerInfo = val[0][0]\n\t\t}\n\t},\n\tmethods: {\n    ...mapActions([\"viewReturn\"]),\n    ...mapMutations([\"updateRealTimeData\", \"reverseRouter\"]),\n   \tshowError(e) {\n   \t\tthis.errorMsg = e\n   \t\tthis.error_snackbar = true\n   \t},\n   \tupdate(params) {\n   \t\tthis.loading = true\n   \t\trequestRealTimeData(params)\n   \t\t.then(result => {\n   \t\t\tconsole.log(result.data)\n   \t\t\tthis.loading = false\n   \t\t\tthis.updateRealTimeData({id: params\n   .Id,data: result.data})\n   \t\t})\n   \t\t.catch(e => (this.showError(e.status)))\n   \t},\n   \tshowJudge(name, busInfo) {\n   \t\treturn busInfo[0][\"name\"] === name ? busInfo[0][\"busState\"] ? \"in\" : \"out\" : false\n\t},\n\t},\n\tmounted() {\n\t\tthis.intervalId = setInterval((self) => {\n\t\t\tself.update(self.routerInfo);\n\t\t}, 4000, this)\n\t},\n\tbeforeDestroy() {\n\t\tclearInterval(this.intervalId)\n\t}\n}\n</script>\n<style scoped>\n.toolbar_titl {\n  flex-direction: column;\n  justify-content: center;\n}\n.timeline_wrap {\n\tmargin-top: 55px;\n}\n.toolbar_titl > span {\n  size: 1.5rem;\n}\n.driveout_icon_wrapper {\n  position: absolute;\n  top: 45px;\n}\n\n</style>"]}]}